This is a copy of Henry Spencer's regular expression library, with
modifications to the build system. I created it to allow building a
shared library, for a project where the library needed to be
dynamically loaded. It uses cmake with help from scripts contributed
by Stephen Just, modified from LuaDist.

The names of installed files (library and headers) have been changed
to avoid conflict with other regex libraries.

Website: https://garyhouston.github.io/regex/

Installation
============

Ignore the installation notes in the original README below. cmake
needs to be installed. To build from a Linux command line, or
something compatible, within the source directory:

to configure for a static library:
cmake .
or
cmake -Drxshared=0 .

to configure for a shared library:
cmake -Drxshared=1 .

to build:
make
make install

also required on Linux, after installing the shared library:
ldconfig

to run the tests:
make test

to run the tests, with output displayed:
ctest -V

Usage
=====

Include the following headers in a C program:

#include <sys/types.h>
#include <rxspencer/regex.h>

Link with the library using the -lrxspencer flag, as in:
gcc test.c -o test -lrxspencer

Man Pages: rxspencer(3), rxspencer(7)

--
Gary Houston,  ghouston@arglist.com

---- original README follows --------
alpha3.8 release.
Tue Aug 10 15:51:48 EDT 1999
henry@spsystems.net  (formerly henry@zoo.toronto.edu)

See WHATSNEW for change listing.

installation notes:
--------
Read the comments at the beginning of Makefile before running.

Utils.h contains some things that just might have to be modified on
some systems, as well as a nested include (ugh) of <assert.h>.

The "fake" directory contains quick-and-dirty fakes for some header
files and routines that old systems may not have.  Note also that
-DUSEBCOPY will make utils.h substitute bcopy() for memmove().

After that, "make r" will build regcomp.o, regexec.o, regfree.o,
and regerror.o (the actual routines), bundle them together into a test
program, and run regression tests on them.  No output is good output.

"make lib" builds just the .o files for the actual routines (when
you're happy with testing and have adjusted CFLAGS for production),
and puts them together into libregex.a.  You can pick up either the
library or *.o ("make lib" makes sure there are no other .o files left
around to confuse things).

Main.c, debug.c, split.c are used for regression testing but are not part
of the RE routines themselves.

Regex.h goes in /usr/include.  All other .h files are internal only.
--------
